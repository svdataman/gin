% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gp_functions.R
\name{gp_fit}
\alias{gp_fit}
\title{Find Maximum Posterior solution for a Gaussian Process model.}
\usage{
gp_fit(theta.0, acv.model = NULL, dat = NULL, logPrior = NULL,
  method = "Nelder-Mead", trace = 0, theta.scale = NULL,
  maxit = 5000, chatter = 0, PDcheck = FALSE)
}
\arguments{
\item{acv.model}{(name) name of the function to compute ACV(tau | theta)}

\item{dat}{(matrix) an N * 3 matrix of data: 3 columns}

\item{logPrior}{(name) Name of the function returning the log Prior density.}

\item{method}{- choice of method for \code{optim}}

\item{theta.scale}{- passed as \code{parscale} to \code{optim}.}

\item{maxit}{- passed to \code{optim}.}

\item{chatter}{(integer) higher values give more run-time feedback}

\item{PDcheck}{(logical) use Matrix::nearPD to coerse the matrix}
}
\value{
A list with components (similar to \code{optim}):
  \item{par}{parameter values (maximum likelihood estimates)}
  \item{err}{std. dev. of MLEs (based on Hessian matrix)}
  \item{acv.model}{name of function used to compute ACV}
  \item{value}{value of \code{gp_logLikelihood} at maximum}
  \item{covergence}{\code{convergence} output from \code{optim}}
  \item{nfunction.calls}{\code{counts} output from \code{optim}}
}
\description{
\code{gp_fit} returns the posterior mode for a Gaussian Process model.
}
\section{Notes}{

 Find the posterior mode for a GP model, given data \code{dat}. See
 \code{gp_logLikelihood} for details of the input data form. The user must
 supply the name of a suitable ACV function and some intial values for the
 ACV's parameters (the hyper-parameters of the GP). The parameters are then
 optimised using \code{optim}. (This is essentially a wrapper function
 applying \code{optim} on \code{gp_logPosterior}.) If no \code{logPrior}
 function is supplied, the result is equivalent to Maximum Likelihood
 Estimation.
}

\seealso{
\code{\link{gp_logLikelihood}}, \code{\link{gp_logPosterior}}
}
